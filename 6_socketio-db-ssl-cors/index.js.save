const express = require('express');
const app = express();
const http = require('http');
const server = http.createServer(app);
const { Server } = require('socket.io');
const io = new Server
});
const mysql = require('mysql');
const connection = mysql.createConnection({
    host: 'localhost',
    user: 'juntanet',
    password: 'JN4IITJ#',
    database: 'juntanet',
});
connection.connect();

function checkToken(token) {
    return new Promise((resolve, reject) => {
        const query = 'SELECT `name` FROM `juntanet_users` WHERE `api_token` = "' + token + '" LIMIT 1';
        console.log("Query: " + query);
        connection.query(query, (error, rows, fields) => {
            if (error) {
                reject(error);
            } else if (rows.length > 0) {
                const username = rows[0].name;
                console.log("User " + username + ' has connected!');
                resolve(username);
            } else {
                reject();
            }
        });
    });
}

app.get('/', (req, res) => {
    res.sendFile(__dirname + '/public/index.html');
});

/*io.use((socket, next) => {
    const token = socket.handshake.auth.token;
    checkToken(token).then((username) => {
        socket.emit('welcome', {servername: 'mayasabha', username: username});
        next();
    }).catch((actualError) => {
        console.log(actualError);
        const error = new Error("Authorization Failed!");
        error.data = {
            content: "Invalid Token!",
        };
        next(error);
    });
});*/

io.on('connection', async (socket) => {
    console.log("Received New Connection!");
    
    socket.onAny((event, ...args) => {
        console.log("Broadcasting Event to all Clients: " + event);
        socket.broadcast.emit(event, ...args);
    });

    socket.on('disconnect', () => {
        console.log("A user has disconnected!");
    });
});

server.listen(3000, () => {
    console.log("Listening on Port:3000");
});
